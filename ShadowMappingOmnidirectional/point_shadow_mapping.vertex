#version 330 core

layout(location = 0) in vec3 aPosition;
layout(location = 1) in vec3 aNormal;
layout(location = 2) in vec2 aTextureCoord;

uniform mat4 model;
uniform mat4 projection;
uniform mat4 view;
uniform bool reverse_normals;
out VS_OUT
{
	vec3 fragPos;
	vec3 normalDir;
	vec2 textcoord;
}vs_out;
void main()
{
	if(reverse_normals)
	{
		vs_out.normalDir = transpose(inverse(mat3(model)))*(-1*aNormal);
	}
	else
	{
		vs_out.normalDir = transpose(inverse(mat3(model)))*aNormal;
	}

	vs_out.fragPos = vec3(model*vec4(aPosition,1.0f));
	vs_out.textcoord = aTextureCoord;
	gl_Position = projection*view*model*vec4(aPosition, 1.0);
}